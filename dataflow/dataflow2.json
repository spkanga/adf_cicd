{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "dimEmployee"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "StgEmployee"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlOffsets",
						"type": "DatasetReference"
					},
					"name": "Offsets"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "dimEmployeeTarget"
				}
			],
			"transformations": [
				{
					"name": "GenerateHashValue"
				},
				{
					"name": "IsHashFound"
				},
				{
					"name": "FindBusinessKey"
				},
				{
					"name": "AddInsertedUpdated"
				},
				{
					"name": "Upsertif"
				},
				{
					"name": "JoinOffsetMax"
				},
				{
					"name": "GenerateSurrogateKey"
				},
				{
					"name": "AddEmployeeKey"
				},
				{
					"name": "Ranking"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join1"
				}
			],
			"script": "\n\nsource(output(\n\t\tdwh_EmployeeKey as integer,\n\t\tdwh_BusinessEntityID as string,\n\t\tdwh_NationalIDNumber as string,\n\t\tdwh_LoginID as string,\n\t\tdwh_OrganizationNode as string,\n\t\tdwh_OrganizationLevel as string,\n\t\tdwh_JobTitle as string,\n\t\tdwh_BirthDate as string,\n\t\tdwh_inserted as string,\n\t\tdwh_lastUpdated as timestamp,\n\t\tdwh_HashValue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tbatchSize: 1,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM [dbo].[dimEmployee]',\n\tformat: 'query') ~> dimEmployee\nsource(output(\n\t\tBusinessEntityID as string,\n\t\tNationalIDNumber as string,\n\t\tLoginID as string,\n\t\tOrganizationNode as string,\n\t\tOrganizationLevel as string,\n\t\tJobTitle as string,\n\t\tBirthDate as string,\n\t\tMaritalStatus as string,\n\t\tGender as string,\n\t\tHireDate as string,\n\t\tSalariedFlag as string,\n\t\tVacationHours as string,\n\t\tSickLeaveHours as string,\n\t\tCurrentFlag as string,\n\t\trowguid as string,\n\t\tModifiedDate as string,\n\t\t{_inserted} as timestamp,\n\t\t{_lastUpdated} as timestamp,\n\t\tStgHash as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tbatchSize: 100,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM [dbo].[employee]',\n\tformat: 'query') ~> StgEmployee\nsource(output(\n\t\tOffSet as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tbatchSize: 10,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Offsets\nStgEmployee derive(StgHash = sha1(NationalIDNumber + OrganizationNode + LoginID)) ~> GenerateHashValue\nAddEmployeeKey, dimEmployee exists(StgHash == dwh_HashValue,\n\tnegate:true,\n\tbroadcast: 'none')~> IsHashFound\nIsHashFound, dimEmployee lookup(StgEmployee@BusinessEntityID == dwh_BusinessEntityID,\n\tbroadcast: 'none')~> FindBusinessKey\nFindBusinessKey derive(Str = 1 == 1,\n\tpartitionBy('roundRobin', 2)) ~> AddInsertedUpdated\nAddInsertedUpdated alterRow(upsertIf(true())) ~> Upsertif\nGenerateHashValue, Offsets join(1 == 1,\n\tjoinType:'cross',\n\tbroadcast: 'none')~> JoinOffsetMax\nJoinOffsetMax keyGenerate(output(EmployeeKey as long),\n\tstartAt: 1L) ~> GenerateSurrogateKey\nJoin1 derive(EmployeeKey = EmployeeKey + OffSet) ~> AddEmployeeKey\nGenerateSurrogateKey aggregate(groupBy(BusinessEntityID),\n\tBusinessEntityIDCount = sum(1),\n\t\tEmpoyeeKey = max(EmployeeKey)) ~> Ranking\nRanking select(mapColumn(\n\t\tBusinessEntityID,\n\t\tBusinessEntityIDCount,\n\t\tMaxEmpoyeeKey = EmpoyeeKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nGenerateSurrogateKey, Select1 join(StgEmployee@BusinessEntityID == Select1@BusinessEntityID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nUpsertif sink(input(\n\t\tdwh_EmployeeKey as integer,\n\t\tdwh_BusinessEntityID as string,\n\t\tdwh_NationalIDNumber as string,\n\t\tdwh_LoginID as string,\n\t\tdwh_OrganizationNode as string,\n\t\tdwh_OrganizationLevel as string,\n\t\tdwh_JobTitle as string,\n\t\tdwh_BirthDate as string,\n\t\tdwh_inserted as string,\n\t\tdwh_lastUpdated as timestamp,\n\t\tdwh_HashValue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['dwh_BusinessEntityID'],\n\tformat: 'table',\n\tmapColumn(\n\t\tdwh_EmployeeKey = EmployeeKey,\n\t\tdwh_BusinessEntityID = StgEmployee@BusinessEntityID,\n\t\tdwh_NationalIDNumber = NationalIDNumber,\n\t\tdwh_LoginID = LoginID,\n\t\tdwh_OrganizationNode = OrganizationNode,\n\t\tdwh_OrganizationLevel = OrganizationLevel,\n\t\tdwh_JobTitle = JobTitle,\n\t\tdwh_BirthDate = BirthDate,\n\t\tdwh_inserted = {_inserted},\n\t\tdwh_lastUpdated = {_lastUpdated},\n\t\tdwh_HashValue = StgHash\n\t)) ~> dimEmployeeTarget"
		}
	}
}