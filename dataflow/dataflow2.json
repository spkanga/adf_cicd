{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "dimEmployee"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "StgEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "GenerateHashValue"
				},
				{
					"name": "IsHashFound"
				},
				{
					"name": "FindBusinessKey"
				},
				{
					"name": "AddInsertedUpdated"
				},
				{
					"name": "Upsertif"
				}
			],
			"script": "\n\nsource(output(\n\t\tEmployeeKey as integer,\n\t\tBusinessEntityID as string,\n\t\tNationalIDNumber as string,\n\t\tLoginID as string,\n\t\tOrganizationNode as string,\n\t\tOrganizationLevel as string,\n\t\tJobTitle as string,\n\t\tBirthDate as string,\n\t\tMaritalStatus as string,\n\t\tGender as string,\n\t\tHireDate as string,\n\t\tSalariedFlag as string,\n\t\tVacationHours as string,\n\t\tSickLeaveHours as string,\n\t\tCurrentFlag as string,\n\t\trowguid as string,\n\t\tModifiedDate as string,\n\t\t{_inserted} as timestamp,\n\t\t{_lastUpdated} as timestamp,\n\t\t{_HashValue} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tbatchSize: 1,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM [dbo].[dimEmployee]',\n\tformat: 'query') ~> dimEmployee\nsource(output(\n\t\tBusinessEntityID as string,\n\t\tNationalIDNumber as string,\n\t\tLoginID as string,\n\t\tOrganizationNode as string,\n\t\tOrganizationLevel as string,\n\t\tJobTitle as string,\n\t\tBirthDate as string,\n\t\tMaritalStatus as string,\n\t\tGender as string,\n\t\tHireDate as string,\n\t\tSalariedFlag as string,\n\t\tVacationHours as string,\n\t\tSickLeaveHours as string,\n\t\tCurrentFlag as string,\n\t\trowguid as string,\n\t\tModifiedDate as string,\n\t\t{_inserted} as timestamp,\n\t\t{_lastUpdated} as timestamp,\n\t\tStgHash as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tbatchSize: 100,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM [dbo].[employee]',\n\tformat: 'query') ~> StgEmployee\nStgEmployee derive(StgHash = sha1(BusinessEntityID + NationalIDNumber + OrganizationNode)) ~> GenerateHashValue\nGenerateHashValue, dimEmployee exists(GenerateHashValue@StgHash == {_HashValue},\n\tnegate:true,\n\tbroadcast: 'none')~> IsHashFound\nIsHashFound, dimEmployee lookup(StgEmployee@BusinessEntityID == dimEmployee@BusinessEntityID,\n\tbroadcast: 'none')~> FindBusinessKey\nFindBusinessKey derive(Str = 1 == 1,\n\tpartitionBy('roundRobin', 2)) ~> AddInsertedUpdated\nAddInsertedUpdated alterRow(upsertIf(true())) ~> Upsertif\nUpsertif sink(input(\n\t\tEmployeeKey as integer,\n\t\tBusinessEntityID as string,\n\t\tNationalIDNumber as string,\n\t\tLoginID as string,\n\t\tOrganizationNode as string,\n\t\tOrganizationLevel as string,\n\t\tJobTitle as string,\n\t\tBirthDate as string,\n\t\tMaritalStatus as string,\n\t\tGender as string,\n\t\tHireDate as string,\n\t\tSalariedFlag as string,\n\t\tVacationHours as string,\n\t\tSickLeaveHours as string,\n\t\tCurrentFlag as string,\n\t\trowguid as string,\n\t\tModifiedDate as string,\n\t\t{_inserted} as string,\n\t\t{_lastUpdated} as timestamp,\n\t\t{_HashValue} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['BusinessEntityID'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}